{
  "name": "@dkamyshov/hot-persist",
  "version": "1.0.0",
  "description": "The persistence API for HMR in webpack 4/5, vite 2/3/4, parcel 2.",
  "keywords": [
    "hot-reload",
    "hmr",
    "webpack",
    "vite",
    "parcel",
    "persist",
    "persistence"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/dkamyshov/hot-persist.git"
  },
  "license": "MIT",
  "main": "./lib/cjs/persist.js",
  "module": "./lib/esm/persist.js",
  "types": "./lib/esm/persist.d.ts",
  "engines": {
    "node": ">=0.12.0"
  },
  "scripts": {
    "lint:prettier": "prettier -c \"**/*\"",
    "lint:eslint": "eslint -c .eslintrc.js --ext .js,.ts . --color",
    "prettier:fix": "prettier --write \"**/*\"",
    "typecheck": "tsc",
    "test": "KEY_TOKEN=test_key_token jest",
    "test:integration": "bash scripts/run-integration-tests.sh",
    "build:esm": "BABEL_ENV=esm babel src --out-dir lib/esm --extensions .ts,.js",
    "build:cjs": "BABEL_ENV=cjs babel src --out-dir lib/cjs --extensions .ts,.js",
    "build:types": "tsc -p tsconfig.build.json",
    "build": "export KEY_TOKEN=$(node ./scripts/generate-random-id.js) && yarn build:esm && yarn build:cjs && yarn build:types",
    "clean": "rm -rf lib",
    "prepare": "yarn clean && yarn test && yarn build"
  },
  "devDependencies": {
    "@babel/cli": "^7.20.7",
    "@babel/core": "^7.20.12",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.18.6",
    "@babel/plugin-proposal-optional-chaining": "^7.20.7",
    "@babel/plugin-transform-modules-commonjs": "^7.20.11",
    "@babel/preset-typescript": "^7.18.6",
    "@types/jest": "^29.4.0",
    "@typescript-eslint/eslint-plugin": "^5.49.0",
    "@typescript-eslint/parser": "^5.49.0",
    "babel-plugin-transform-define": "^2.1.0",
    "eslint": "^8.32.0",
    "jest": "^29.4.0",
    "prettier": "^2.8.3",
    "typescript": "^4.9.4"
  },
  "peerDependencies": {
    "@types/node": "*",
    "@types/webpack-env": "*",
    "@types/parcel-env": "*",
    "webpack": ">=4",
    "vite": ">=2",
    "parcel": ">=2"
  },
  "peerDependenciesMeta": {
    "@types/node": {
      "optional": true
    },
    "@types/webpack-env": {
      "optional": true
    },
    "@types/parcel-env": {
      "optional": true
    },
    "webpack": {
      "optional": true
    },
    "vite": {
      "optional": true
    },
    "parcel": {
      "optional": true
    }
  },
  "files": [
    "src",
    "lib",
    "index.js",
    "index.d.ts",
    "!src/**/*.spec.ts"
  ]
}
